[
    {
        "client_msg_id": "2c590894-14a9-4758-9553-2b4eaf83aa8f",
        "type": "message",
        "text": "Hi <@U013ZLJARC7>\nIn the web3 space there is now a growing debate around the term \"public goods\". Events like these lead the way: <https:\/\/twitter.com\/elamadej\/status\/1536813414772723712?s=20&amp;t=Vu9qGtIRxglQdmPEUMC6AA>",
        "user": "UJFN50C00",
        "ts": "1655301106.729469",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/twitter.com\/elamadej\/status\/1536813414772723712?s=20&amp;t=Vu9qGtIRxglQdmPEUMC6AA",
                "ts": 1655239845,
                "image_url": "https:\/\/pbs.twimg.com\/media\/FVPblG0VsAEvWcQ.png",
                "image_width": 1200,
                "image_height": 1200,
                "image_bytes": 252198,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/elamadej\/status\/1536813414772723712?s=20&amp;t=Vu9qGtIRxglQdmPEUMC6AA",
                "fallback": "<https:\/\/twitter.com\/elamadej|@elamadej>: Join me &amp; other impact-driven developers, entrepreneurs, researchers, investors, &amp; economists to explore how to fork capitalism to serve humanity better.\n\n<https:\/\/twitter.com\/fiftyyears|@fiftyyears>, <https:\/\/twitter.com\/protocollabs|@protocollabs>, <https:\/\/twitter.com\/gitcoin|@gitcoin> are co-hosting Funding the Commons in NYC June 24th. \n\nRegister:\n<https:\/\/www.eventbrite.com\/e\/funding-the-commons-registration-321958224717> <https:\/\/pbs.twimg.com\/media\/FVPblG0VsAEvWcQ.png>",
                "text": "Join me &amp; other impact-driven developers, entrepreneurs, researchers, investors, &amp; economists to explore how to fork capitalism to serve humanity better.\n\n<https:\/\/twitter.com\/fiftyyears|@fiftyyears>, <https:\/\/twitter.com\/protocollabs|@protocollabs>, <https:\/\/twitter.com\/gitcoin|@gitcoin> are co-hosting Funding the Commons in NYC June 24th. \n\nRegister:\n<https:\/\/www.eventbrite.com\/e\/funding-the-commons-registration-321958224717> <https:\/\/pbs.twimg.com\/media\/FVPblG0VsAEvWcQ.png>",
                "author_name": "Ela Madej ðŸ‡ºðŸ‡¦ðŸ‡µðŸ‡±ðŸ‡ºðŸ‡¸",
                "author_link": "https:\/\/twitter.com\/elamadej\/status\/1536813414772723712",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1436744723671105540\/-AIp8oDQ_normal.jpg",
                "author_subname": "@elamadej",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7csG8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "\nIn the web3 space there is now a growing debate around the term \"public goods\". Events like these lead the way: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/elamadej\/status\/1536813414772723712?s=20&t=Vu9qGtIRxglQdmPEUMC6AA"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1652511559.550309",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "dd0b0882-22de-4079-a87c-d2d7dbfff2f6",
        "type": "message",
        "text": "Gitcoin for example sees open source software as public goods thing.",
        "user": "UJFN50C00",
        "ts": "1655301129.716279",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rCf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gitcoin for example sees open source software as public goods thing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1652511559.550309",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "61f507d2-9dc2-4400-931d-18a52f123652",
        "type": "message",
        "text": "As a web dev I can't count the number of hours I've had to spend on re-loading a web page after an edit, and then clicking my way back to the state I'm actually trying to iterate on, even with hot module replacement enabled.\n\nAnyone know of visual programming projects where the user can execute their program, interact to change program state, pause program execution, edit the program to make changes, and then resume execution from that point on with a modified program?\n\nMy current thinking is that there's a lot of potential edge cases where the program could break or fail due to undefined semantics, but there could be a sweet-spot for doing minor edits and staying productive due to not having to restart the program from scratch. Hot module replacement has become widely used, but that's limited by having to do traditional text-based coding, and it's only able to replace code at the module level.\n\nI'll illustrate one use case where I think there's a good tradeoff between complexity and reward for the user:\nâ€¢ Open a page in the product being coded in a VPL environment\nâ€¢ Open some kind of overlay, e.g. a dialog\nâ€¢ Pause the program\nâ€¢ Tweak the appearance of the dialog while remaining in the context of the current program state\nâ€¢ Add new UI elements to the dialog (non-breaking changes)\nâ€¢ Resume the program",
        "user": "U03GBV8B58V",
        "ts": "1655305073.621509",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e8345518ba8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-21\/3558879757875_3e8345518ba82b825c6d_72.jpg",
            "first_name": "Jim",
            "real_name": "Jim Meyer",
            "display_name": "Jim Meyer",
            "team": "T5TCAFTA9",
            "name": "jimkyndemeyer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "U03GBV8B58V",
            "ts": "1655305120.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1YhU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a web dev I can't count the number of hours I've had to spend on re-loading a web page after an edit, and then clicking my way back to the state I'm actually trying to iterate on, even with hot module replacement enabled.\n\nAnyone know of visual programming projects where the user can execute their program, interact to change program state, pause program execution, edit the program to make changes, and then resume execution from that point on with a modified program?\n\nMy current thinking is that there's a lot of potential edge cases where the program could break or fail due to undefined semantics, but there could be a sweet-spot for doing minor edits and staying productive due to not having to restart the program from scratch. Hot module replacement has become widely used, but that's limited by having to do traditional text-based coding, and it's only able to replace code at the module level.\n\nI'll illustrate one use case where I think there's a good tradeoff between complexity and reward for the user:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Open a page in the product being coded in a VPL environment"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Open some kind of overlay, e.g. a dialog"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Pause the program"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Tweak the appearance of the dialog while remaining in the context of the current program state"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Add new UI elements to the dialog (non-breaking changes)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Resume the program"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "reply_count": 17,
        "reply_users_count": 5,
        "latest_reply": "1655631302.609289",
        "reply_users": [
            "U02E4DAQGSZ",
            "UC2A2ARPT",
            "U03GBV8B58V",
            "URKQXRCAC",
            "U0245E9RB2B"
        ],
        "replies": [
            {
                "user": "U02E4DAQGSZ",
                "ts": "1655305602.563279"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1655306408.939729"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655306758.690539"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1655306968.062899"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1655307168.216149"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655307245.686039"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655307514.440859"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1655316431.735689"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655319939.802819"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1655320646.117589"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655372016.939739"
            },
            {
                "user": "URKQXRCAC",
                "ts": "1655409680.233929"
            },
            {
                "user": "URKQXRCAC",
                "ts": "1655409748.365169"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655449311.311409"
            },
            {
                "user": "URKQXRCAC",
                "ts": "1655485068.049099"
            },
            {
                "user": "U0245E9RB2B",
                "ts": "1655627389.911559"
            },
            {
                "user": "U03GBV8B58V",
                "ts": "1655631302.609289"
            }
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "7f8b6b6b-049f-4d9d-8a0c-c5daa6e75871",
        "type": "message",
        "text": "yeah I literally just posted a livestream of me doing it. It uses observable that does hot-code reloading at a spreadsheet cell level <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1655305481506719?thread_ts=1654599838.770959&amp;cid=CCL5VVBAN>",
        "user": "U02E4DAQGSZ",
        "ts": "1655305602.563279",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1655305647.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B7Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I literally just posted a livestream of me doing it. It uses observable that does hot-code reloading at a spreadsheet cell level "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1655305481506719?thread_ts=1654599838.770959&cid=CCL5VVBAN"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U03GBV8B58V"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e91b8c24-c36b-4cba-83b6-7bd64455f28f",
        "type": "message",
        "text": "The idea machines piece which <@U5TCAFTD3> shared went into a similar direction (public goods funding through crypto)",
        "user": "UJFN50C00",
        "ts": "1655306373.440849",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XUN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The idea machines piece which "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " shared went into a similar direction (public goods funding through crypto)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1652511559.550309",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "d19bc590-f65f-496a-8862-7d3b67ade6cb",
        "type": "message",
        "text": "<https:\/\/nadia.xyz\/idea-machines>",
        "user": "UJFN50C00",
        "ts": "1655306376.939889",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/nadia.xyz\/idea-machines",
                "ts": 1652313600,
                "service_icon": "https:\/\/nadia.xyz\/assets\/img\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/nadia.xyz\/idea-machines",
                "fallback": "Nadia Asparouhova: Idea machines",
                "text": "Tech as a system of values, and not just an industry, is heavily driven by its subcultures and their ideologies. Where do these ideologies come from, and how do they influence whatâ€™s accomplished?",
                "title": "Idea machines",
                "title_link": "https:\/\/nadia.xyz\/idea-machines",
                "service_name": "Nadia Asparouhova"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S6\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/nadia.xyz\/idea-machines"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1652511559.550309",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "21c1c505-5b70-48ea-b412-f14ab1730dce",
        "type": "message",
        "text": "&gt; Anyone know of visual programming projects where the user can execute their program, interact to change program state, pause program execution, edit the program to make changes, and then resume execution from that point on with a modified program?\nI'd like that too. <https:\/\/ivanish.ca\/hest-time-travel\/>",
        "user": "UC2A2ARPT",
        "ts": "1655306408.939729",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z3c=K",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone know of visual programming projects where the user can execute their program, interact to change program state, pause program execution, edit the program to make changes, and then resume execution from that point on with a modified program?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'd like that too. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ivanish.ca\/hest-time-travel\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U03GBV8B58V"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c7db7f98-f236-4e6d-9917-edfb4a4a46f2",
        "type": "message",
        "text": "<@UC2A2ARPT> time travel would be mind-blowing as well! Any recent developments since that blog post? I've seen <http:\/\/replay.io|replay.io> doing some cool things here, but they had to go to the browser runtime level to make it possible if I understand their approach correctly.",
        "user": "U03GBV8B58V",
        "ts": "1655306758.690539",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e8345518ba8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-21\/3558879757875_3e8345518ba82b825c6d_72.jpg",
            "first_name": "Jim",
            "real_name": "Jim Meyer",
            "display_name": "Jim Meyer",
            "team": "T5TCAFTA9",
            "name": "jimkyndemeyer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+=4VY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " time travel would be mind-blowing as well! Any recent developments since that blog post? I've seen "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/replay.io",
                                "text": "replay.io"
                            },
                            {
                                "type": "text",
                                "text": " doing some cool things here, but they had to go to the browser runtime level to make it possible if I understand their approach correctly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "client_msg_id": "33355d9a-a640-484f-8e34-d71d12bc9e82",
        "type": "message",
        "text": "I did a fair bit more prototyping after that blog post, and discussed it in a <https:\/\/ivanish.ca\/hest-podcast\/|podcast mini-series>. The project is on hold right now because I need to take care of some other things at work. Planning to pick it up again around this time next year, but we'll see.",
        "user": "UC2A2ARPT",
        "ts": "1655306968.062899",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M+A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did a fair bit more prototyping after that blog post, and discussed it in a "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ivanish.ca\/hest-podcast\/",
                                "text": "podcast mini-series"
                            },
                            {
                                "type": "text",
                                "text": ". The project is on hold right now because I need to take care of some other things at work. Planning to pick it up again around this time next year, but we'll see."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03GBV8B58V"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8a8e54e1-f1ad-4ecb-b2d0-a6cf8f4cf94b",
        "type": "message",
        "text": "In your OP, you talked about a problem that comes up frequently in textual coding, but you specifically frame it with respect to visual programming. I'd love to know more about where your focus on visual programming comes from. Are you already using a VPL to do this sort of work?",
        "user": "UC2A2ARPT",
        "ts": "1655307168.216149",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RQg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In your OP, you talked about a problem that comes up frequently in textual coding, but you specifically frame it with respect to visual programming. I'd love to know more about where your focus on visual programming comes from. Are you already using a VPL to do this sort of work?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "client_msg_id": "5367f77d-27e4-4e81-a6a9-755035a62046",
        "type": "message",
        "text": "Yep, working on visual programming for UX designers: <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1653320954120799>",
        "user": "U03GBV8B58V",
        "ts": "1655307245.686039",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e8345518ba8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-21\/3558879757875_3e8345518ba82b825c6d_72.jpg",
            "first_name": "Jim",
            "real_name": "Jim Meyer",
            "display_name": "Jim Meyer",
            "team": "T5TCAFTA9",
            "name": "jimkyndemeyer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ItUOF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep, working on visual programming for UX designers: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1653320954120799"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "type": "message",
        "text": "The canvas can be switched from edit-mode into play\/interact mode. We'll be supporting editing though a play\/pause kind of interaction along with a reset action to restart an artboard from the initial state.",
        "files": [
            {
                "id": "F03KCFZ17KR",
                "created": 1655307487,
                "timestamp": 1655307487,
                "name": "henosia-modals.mp4",
                "title": "henosia-modals.mp4",
                "mimetype": "video\/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "U03GBV8B58V",
                "editable": false,
                "size": 25689023,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F03KCFZ17KR-0d52b10c2a\/henosia-modals.mp4?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "url_private": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F03KCFZ17KR-0d52b10c2a\/henosia-modals.mp4?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F03KCFZ17KR\/download\/henosia-modals.mp4?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "hls": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F03KCFZ17KR-0d52b10c2a\/file.m3u8?_xcb=5c62f&t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "hls_embed": "data:application\/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9NDM1NDczLEFWRVJBR0UtQkFORFdJRFRIPTM3Mzk1NCxDT0RFQ1M9ImF2YzEuNjQwMDI4LG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xOTIweDEwODAsRlJBTUUtUkFURT0yOS45NzAKZGF0YTphcHBsaWNhdGlvbi92bmQuYXBwbGUubXBlZ3VybDtiYXNlNjQsSTBWWVZFMHpWUW9qUlZoVUxWZ3RWa1ZTVTBsUFRqb3pDaU5GV0ZRdFdDMVVRVkpIUlZSRVZWSkJWRWxQVGpvM0NpTkZXRlF0V0MxTlJVUkpRUzFUUlZGVlJVNURSVG94Q2lORldGUXRXQzFRVEVGWlRFbFRWQzFVV1ZCRk9sWlBSQW9qUlZoVVNVNUdPall1TURBMkxBcG9kSFJ3Y3pvdkwyWnBiR1Z6TG5Oc1lXTnJMbU52YlM5bWFXeGxjeTEwYldJdlZEVlVRMEZHVkVFNUxVWXdNMHREUmxveE4wdFNMVEJrTlRKaU1UQmpNbUV2Wm1sc1pWOUlYekkyTkY4eE9USXdlREV3T0RCZk5qVXdNRXRDVUZOZk4xRldRbEpmTURBd01ERXVkSE1LSTBWWVZFbE9Sam8yTGpBd05pd0thSFIwY0hNNkx5OW1hV3hsY3k1emJHRmpheTVqYjIwdlptbHNaWE10ZEcxaUwxUTFWRU5CUmxSQk9TMUdNRE5MUTBaYU1UZExVaTB3WkRVeVlqRXdZekpoTDJacGJHVmZTRjh5TmpSZk1Ua3lNSGd4TURnd1h6WTFNREJMUWxCVFh6ZFJWa0pTWHpBd01EQXlMblJ6Q2lORldGUkpUa1k2Tmk0d01EWXNDbWgwZEhCek9pOHZabWxzWlhNdWMyeGhZMnN1WTI5dEwyWnBiR1Z6TFhSdFlpOVVOVlJEUVVaVVFUa3RSakF6UzBOR1dqRTNTMUl0TUdRMU1tSXhNR015WVM5bWFXeGxYMGhmTWpZMFh6RTVNakI0TVRBNE1GODJOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdNeTUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TTB0RFJsb3hOMHRTTFRCa05USmlNVEJqTW1FdlptbHNaVjlJWHpJMk5GOHhPVEl3ZURFd09EQmZOalV3TUV0Q1VGTmZOMUZXUWxKZk1EQXdNRFF1ZEhNS0kwVllWRWxPUmpvMkxqQXdOaXdLYUhSMGNITTZMeTltYVd4bGN5NXpiR0ZqYXk1amIyMHZabWxzWlhNdGRHMWlMMVExVkVOQlJsUkJPUzFHTUROTFEwWmFNVGRMVWkwd1pEVXlZakV3WXpKaEwyWnBiR1ZmU0Y4eU5qUmZNVGt5TUhneE1EZ3dYelkxTURCTFFsQlRYemRSVmtKU1h6QXdNREExTG5SekNpTkZXRlJKVGtZNk5pNHdNRFlzQ21oMGRIQnpPaTh2Wm1sc1pYTXVjMnhoWTJzdVkyOXRMMlpwYkdWekxYUnRZaTlVTlZSRFFVWlVRVGt0UmpBelMwTkdXakUzUzFJdE1HUTFNbUl4TUdNeVlTOW1hV3hsWDBoZk1qWTBYekU1TWpCNE1UQTRNRjgyTlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3Tmk1MGN3b2pSVmhVU1U1R09qVXVNREExTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd00wdERSbG94TjB0U0xUQmtOVEppTVRCak1tRXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TURjdWRITUtJMFZZVkMxWUxVVk9SRXhKVTFRSwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MzA0NzU2LEFWRVJBR0UtQkFORFdJRFRIPTI3NTA0MCxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xMjgweDcyMCxGUkFNRS1SQVRFPTI5Ljk3MApodHRwczovL2ZpbGVzLnNsYWNrLmNvbS9maWxlcy10bWIvVDVUQ0FGVEE5LUYwM0tDRloxN0tSLTBkNTJiMTBjMmEvZmlsZV9IXzI2NF8xMjgweDcyMF8zNTAwS0JQU183UVZCUi5tM3U4Cg==",
                "mp4_low": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F03KCFZ17KR-0d52b10c2a\/henosia-modals_trans.mp4?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "duration_ms": 41041,
                "media_display_type": "video",
                "thumb_video": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F03KCFZ17KR-0d52b10c2a\/henosia-modals_thumb_video.jpeg?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_video_w": 1920,
                "thumb_video_h": 1080,
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/U03GBV8B58V\/F03KCFZ17KR\/henosia-modals.mp4",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F03KCFZ17KR-25ac9c561e",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U03GBV8B58V",
        "display_as_bot": false,
        "ts": "1655307514.440859",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VQJBQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The canvas can be switched from edit-mode into play\/interact mode. We'll be supporting editing though a play\/pause kind of interaction along with a reset action to restart an artboard from the initial state."
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "04b19aa8-53d3-4cc2-a29d-8ae850d4ec6b",
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "client_msg_id": "8e8dc69f-4d87-4657-b98d-77b384094310",
        "type": "message",
        "text": "Are there any IDE's that allow you to visually interleave the stack trace with debug output, so you get a picture of which frames the output occurred within?",
        "user": "ULM3U6275",
        "ts": "1655316367.875769",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8UCg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any IDE's that allow you to visually interleave the stack trace with debug output, so you get a picture of which frames the output occurred within?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655316367.875769",
        "reply_count": 10,
        "reply_users_count": 5,
        "latest_reply": "1655790370.376589",
        "reply_users": [
            "U02E4DAQGSZ",
            "UJBAJNFLK",
            "UCUSW7WVD",
            "UA14TGLTC",
            "UML4ZEKDK"
        ],
        "replies": [
            {
                "user": "U02E4DAQGSZ",
                "ts": "1655317270.529749"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1655317871.367069"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1655342627.852549"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1655366653.674489"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1655611734.745419"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1655632704.550559"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1655633928.970809"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1655649065.646109"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1655710804.429539"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1655790370.376589"
            }
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "03482f96-f125-416a-9e1d-f722f3807988",
        "type": "message",
        "text": "Observable manges to avoid the \"pause\/play\" interaction by reactive hot-code reloading cells on any code change. It also avoids the switching between code and output by using per cells editors so its all interleaved in the same browser env. It is made for developing visualizations so it meets your criteria of being graphical (its by the creator of D3 to address the ergonomics of dataviz creation). This notebook is fairly mind blowing in its visual innovation <https:\/\/observablehq.com\/@makio135\/creative-coding>",
        "user": "U02E4DAQGSZ",
        "ts": "1655316431.735689",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2VH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Observable manges to avoid the \"pause\/play\" interaction by reactive hot-code reloading cells on any code change. It also avoids the switching between code and output by using per cells editors so its all interleaved in the same browser env. It is made for developing visualizations so it meets your criteria of being graphical (its by the creator of D3 to address the ergonomics of dataviz creation). This notebook is fairly mind blowing in its visual innovation "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@makio135\/creative-coding"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "client_msg_id": "75d320a9-4a17-442e-8e6e-e74abb04bded",
        "type": "message",
        "text": "Quoting myself from yesterday \"Observable is written in a notebook style where its divided into cells. The cells are great because, even though this cell was evaluated a while ago, we can inspect in our leisure the last value, so the program leaves a trace of its execution. The state of the cells are remembered. The fact that it remembers makes it very powerful for development.\"\n\nThanks to hot code reloading, in server programming, we can remember an incoming request in a cell THEN write the implementation AFTER we observe the schema in the external request. We can lazy code against reality, without waiting on fresh requests to arrive\n\n <https:\/\/youtu.be\/5KxloAcMeSE?t=1307>",
        "user": "U02E4DAQGSZ",
        "ts": "1655317270.529749",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9qNr\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Quoting myself from yesterday \"Observable is written in a notebook style where its divided into cells. The cells are great because, even though this cell was evaluated a while ago, we can inspect in our leisure the last value, so the program leaves a trace of its execution. The state of the cells are remembered. The fact that it remembers makes it very powerful for development.\"\n\nThanks to hot code reloading, in server programming, we can remember an incoming request in a cell THEN write the implementation AFTER we observe the schema in the external request. We can lazy code against reality, without waiting on fresh requests to arrive\n\n "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/5KxloAcMeSE?t=1307"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655316367.875769",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "0E48DDE8-4B9C-4542-94FD-27F2A0D38297",
        "type": "message",
        "text": "<@ULM3U6275> If I understand your description correctly, any Smalltalk system qualifies.",
        "user": "UJBAJNFLK",
        "ts": "1655317871.367069",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kTAw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " If"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " understand "
                            },
                            {
                                "type": "text",
                                "text": "your"
                            },
                            {
                                "type": "text",
                                "text": " description correctly"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "any"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Smalltalk"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "system"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "qualifies."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655316367.875769",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4bfeb942-ffa3-48f8-83e6-9b4fd38b80c0",
        "type": "message",
        "text": "<@U02E4DAQGSZ> Wow, that's a pretty wild demo of the capabilities :thumbsup:\n\nWith Observable the trigger to enter edit mode is focusing the code editor and typing. With a visual canvas, it's a single interaction target, so I don't see how we'd understand whether the user is looking to interact or edit without a toggle button for interact\/edit mode. Still, that toggle button is only a single click, same as focusing\/clicking in the code editor in Observable, so not a significant friction.",
        "user": "U03GBV8B58V",
        "ts": "1655319939.802819",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3e8345518ba8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-21\/3558879757875_3e8345518ba82b825c6d_72.jpg",
            "first_name": "Jim",
            "real_name": "Jim Meyer",
            "display_name": "Jim Meyer",
            "team": "T5TCAFTA9",
            "name": "jimkyndemeyer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OYY0K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": " Wow, that's a pretty wild demo of the capabilities "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWith Observable the trigger to enter edit mode is focusing the code editor and typing. With a visual canvas, it's a single interaction target, so I don't see how we'd understand whether the user is looking to interact or edit without a toggle button for interact\/edit mode. Still, that toggle button is only a single click, same as focusing\/clicking in the code editor in Observable, so not a significant friction."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "client_msg_id": "77c2d02e-2128-469f-bfd5-8f9443835ef3",
        "type": "message",
        "text": "Seems similar to De Morgan's laws, whose generalizations are discussed here <https:\/\/en.wikipedia.org\/wiki\/De_Morgan%27s_laws#Generalising_De_Morgan_duality>",
        "user": "U02E4DAQGSZ",
        "ts": "1655319943.485919",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xXD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seems similar to De Morgan's laws, whose generalizations are discussed here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/De_Morgan%27s_laws#Generalising_De_Morgan_duality"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655110249.993679",
        "parent_user_id": "U02M6PM725T"
    },
    {
        "client_msg_id": "5a0d0b48-0f30-4213-8c29-97eaf46c5d03",
        "type": "message",
        "text": "Oh I did not understand you meant against direct manipulation, wow, that sounds interesting! I see in your other thread you are struggling with determining the dependency graph over Typescript. I am fairly sure Observable uses Acorn because their early developer made the following notebook which I think hints at how they figured out cross references in their private compiler: <https:\/\/observablehq.com\/@tmcw\/notebook-distiller>\nThen they put all the cells in their open source runtime that does the auto-invalidation and recomputation.:- <https:\/\/github.com\/observablehq\/runtime>\nThere is a project trying to recreate the private compiler.",
        "user": "U02E4DAQGSZ",
        "ts": "1655320646.117589",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ea\/Qu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh I did not understand you meant against direct manipulation, wow, that sounds interesting! I see in your other thread you are struggling with determining the dependency graph over Typescript. I am fairly sure Observable uses Acorn because their early developer made the following notebook which I think hints at how they figured out cross references in their private compiler: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tmcw\/notebook-distiller"
                            },
                            {
                                "type": "text",
                                "text": "\nThen they put all the cells in their open source runtime that does the auto-invalidation and recomputation.:- "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/observablehq\/runtime"
                            },
                            {
                                "type": "text",
                                "text": "\nThere is a project trying to recreate the private compiler."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655305073.621509",
        "parent_user_id": "U03GBV8B58V"
    },
    {
        "client_msg_id": "df69722c-49cf-4010-b1df-7fcc3f0ecd96",
        "type": "message",
        "text": "<@U02E4DAQGSZ> That's really interesting(!) but feels slightly different. A stream of time-ordered output with stack frame attached, as opposed to the most recent execution of every possible stack frame, without time-ordering information. If I understand you correctly.\n\n<@UJBAJNFLK> what form of debug output are you thinking of in a Smalltalk program?\n\n<@ULM3U6275> it isn't an IDE, but I have this tiny framework for emitting logs with an associated stack depth, along with a tiny tool to zoom in and out of such logs. <https:\/\/git.sr.ht\/~akkartik\/basic-whitebox-test\/tree\/main\/item\/browse_trace\/Readme.md> The basic idea is totally language agnostic. Debug by print on steroids.",
        "user": "UCUSW7WVD",
        "ts": "1655342627.852549",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6a1zw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": " That's really interesting(!) but feels slightly different. A stream of time-ordered output with stack frame attached, as opposed to the most recent execution of every possible stack frame, without time-ordering information. If I understand you correctly.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " what form of debug output are you thinking of in a Smalltalk program?\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " it isn't an IDE, but I have this tiny framework for emitting logs with an associated stack depth, along with a tiny tool to zoom in and out of such logs. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/git.sr.ht\/~akkartik\/basic-whitebox-test\/tree\/main\/item\/browse_trace\/Readme.md"
                            },
                            {
                                "type": "text",
                                "text": " The basic idea is totally language agnostic. Debug by print on steroids."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655316367.875769",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    }
]