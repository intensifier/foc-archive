[
    {
        "client_msg_id": "8427c4ee-ea9c-4d43-af71-cbfb0f986dae",
        "type": "message",
        "text": "I had a closer look at Factor, just out of curiosity. It's actually a very interesting language\/system to study. It feels much like a much slimmed-down Common Lisp. Like CL, it's an image-based source-code-first language (as opposed to Smalltalk, where the image is the ground truth of the system). Its object system resembles CLOS (and not by accident) but slimmed down as well. It has a sizeable standard library but apparently no package system, which I find particularly refreshing given how much of a pain package systems have become. It looks like publishing Factor code comes down to proposing a pull request to the standard library. Which obviously doesn't scale, but then it doesn't have to. Factor looks very much like a \"small is beautiful\" language.\n\nIf anyone else is tempted to explore Factor, there's a tutorial at <https:\/\/andreaferretti.github.io\/factor-tutorial\/> that I found helpful because it doesn't get stuck at beginners' topic but aims at an overview of the whole system.",
        "user": "UJBAJNFLK",
        "ts": "1621072845.210200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1621073117.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/0YXL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had a closer look at Factor, just out of curiosity. It's actually a very interesting language\/system to study. It feels much like a much slimmed-down Common Lisp. Like CL, it's an image-based source-code-first language (as opposed to Smalltalk, where the image is the ground truth of the system). Its object system resembles CLOS (and not by accident) but slimmed down as well. It has a sizeable standard library but apparently no package system, which I find particularly refreshing given how much of a pain package systems have become. It looks like publishing Factor code comes down to proposing a pull request to the standard library. Which obviously doesn't scale, but then it doesn't have to. Factor looks very much like a \"small is beautiful\" language.\n\nIf anyone else is tempted to explore Factor, there's a tutorial at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/andreaferretti.github.io\/factor-tutorial\/"
                            },
                            {
                                "type": "text",
                                "text": " that I found helpful because it doesn't get stuck at beginners' topic but aims at an overview of the whole system."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1619602565.130500",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "73ca10e9-975b-402d-bef3-bb6d2be7d3c5",
        "type": "message",
        "text": "Forth : Factor :: Common Lisp : Clojure",
        "user": "UA14TGLTC",
        "ts": "1621081708.210600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W0=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Forth : Factor :: Common Lisp : Clojure"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1619602565.130500",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "acd172b3-8ace-463c-856a-6fbd6804362f",
        "type": "message",
        "text": "That's unfair to either Common Lisp or Clojure :wink:  Forth is a low-level language like C (minus some features), whereas Factor has data types, memory management, and more.",
        "user": "UJBAJNFLK",
        "ts": "1621083368.210800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Bgs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's unfair to either Common Lisp or Clojure "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": "  Forth is a low-level language like C (minus some features), whereas Factor has data types, memory management, and more."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1619602565.130500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "4c66eaae-3415-4d9d-a2b8-9c7b603563e2",
        "type": "message",
        "text": "I agree with <@UJBAJNFLK>, but do get <@UA14TGLTC>'s point in the sense of a fresh re-think :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1621084862.211100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf4ae9e5b293",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f4ae9e5b29386489b18b3bc6b1f41a22.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U8mY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ", but do get "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": "'s point in the sense of a fresh re-think "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1619602565.130500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "35285028-b53a-4a8e-9341-116dbeed6b0c",
        "type": "message",
        "text": "Yes, <@UJBAJNFLK> the analogy is more sentimental than it is correct.",
        "user": "UA14TGLTC",
        "ts": "1621095788.211500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZnZ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " the analogy is more sentimental than it is correct."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1619602565.130500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    }
]