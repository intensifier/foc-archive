[
    {
        "client_msg_id": "FD65C7E7-67A4-4489-BFE8-F041BD5EFCF5",
        "type": "message",
        "text": "<@UA14TGLTC> I looked into Barry Jay’s stuff a while ago and remember not being impressed. Is there something that patterns are better than functions at expressing? One can already compose functions in many different ways.",
        "user": "UCGAK10LS",
        "ts": "1607328696.222400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kEm5P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I looked into Barry Jay’s stuff a while ago and remember not being impressed. Is there something that patterns are better than functions at expressing? One can already compose functions in many different ways."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607237197.201100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "194bf226-a486-47b7-b8b6-04d5f285f453",
        "type": "message",
        "text": "Well, not at all in an important sense, but kind of depending on your domain.  Patterns here basically amount to partial functions.  So if your domain happens to be all about partial functions (that's me sometimes where I end up using a lot of tables), then there's something to find here.  But it's not going to be anything more than having a few functions for nicely composing `a -&gt; Maybe b`, generally.\n\nI guess a potential important difference can be whether you want to model order.  For instance, Rubyist that I am, the keys in a `Hash` are ordered and I use this all the time.  In another context, you may not want to keep that information around.\n\nAnother thought that I had while trying to remember the pattern calculus is why prefer a composition operator like this\n```&lt;+&gt; :: (a -&gt; Maybe b) -&gt; (a -&gt; Maybe b) -&gt; (a -&gt; Maybe b)\n(f &lt;+&gt; g) x = f x `orElse` g x```\nover something that collects all the results:\n```&lt;*&gt; :: (a -&gt; [b]) -&gt; (a -&gt; [b]) -&gt; (a -&gt; [b])\n(f &lt;*&gt; g) x = f x ++ g x```\nAnd so on.",
        "user": "UA14TGLTC",
        "ts": "1607329762.222600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZqyC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, not at all in an important sense, but kind of depending on your domain.  Patterns here basically amount to partial functions.  So if your domain happens to be all about partial functions (that's me sometimes where I end up using a lot of tables), then there's something to find here.  But it's not going to be anything more than having a few functions for nicely composing "
                            },
                            {
                                "type": "text",
                                "text": "a -> Maybe b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", generally.\n\nI guess a potential important difference can be whether you want to model order.  For instance, Rubyist that I am, the keys in a "
                            },
                            {
                                "type": "text",
                                "text": "Hash",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are ordered and I use this all the time.  In another context, you may not want to keep that information around.\n\nAnother thought that I had while trying to remember the pattern calculus is why prefer a composition operator like this\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "<+> :: (a -> Maybe b) -> (a -> Maybe b) -> (a -> Maybe b)\n(f <+> g) x = f x `orElse` g x"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "over something that collects all the results:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "<*> :: (a -> [b]) -> (a -> [b]) -> (a -> [b])\n(f <*> g) x = f x ++ g x"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And so on."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607237197.201100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "9d84569e-941f-4ebb-8ce4-d335026030d7",
        "type": "message",
        "text": "I think Jay's most interesting idea was in giving up referential transparency for a kind reflection.  I like being able to look inside my methods.  So that's neat.",
        "user": "UA14TGLTC",
        "ts": "1607329842.222800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yOUW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think Jay's most interesting idea was in giving up referential transparency for a kind reflection.  I like being able to look inside my methods.  So that's neat."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607237197.201100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "4A84720C-114B-4216-AC5B-ACEB480B2C1C",
        "type": "message",
        "text": "<@UA14TGLTC> Partial functions are my mortal enemy :innocent:. It’s a strict requirement that my programming language only permits total functions. The challenge is then making it expressive enough that you never feel you “need” a partial function somewhere!",
        "user": "UCGAK10LS",
        "ts": "1607330022.225100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r1nXk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Partial functions are my mortal enemy "
                            },
                            {
                                "type": "emoji",
                                "name": "innocent",
                                "unicode": "1f607"
                            },
                            {
                                "type": "text",
                                "text": ". It’s a strict requirement that my programming language only permits total functions. The challenge is then making it expressive enough that you never feel you “need” a partial function somewhere!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607237197.201100",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "beer",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "DE9A2370-6E3B-415A-817F-C73260421EB6",
        "type": "message",
        "text": "Thanks for the details though. Sounds like pattern calculus is not what I want.",
        "user": "UCGAK10LS",
        "ts": "1607330121.226200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rYz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the details though. Sounds like pattern calculus is not what I want."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607237197.201100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "type": "message",
        "text": "Working on a low-code project for native apps. The idea is predicated on the argument that many apps are just \"skins around a database\".\n\nWhy is declarative UI + declarative queries a bad idea? For example we create a todo app like this:",
        "files": [
            {
                "id": "F01FWEKAVHV",
                "created": 1607354633,
                "timestamp": 1607354633,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U01GFBBG0Q4",
                "editable": false,
                "size": 212242,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01FWEKAVHV\/image.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01FWEKAVHV\/download\/image.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "media_display_type": "unknown",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_64.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_80.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_360.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360_w": 360,
                "thumb_360_h": 333,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_480.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_480_w": 480,
                "thumb_480_h": 444,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_160.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_720.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720_w": 720,
                "thumb_720_h": 667,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_800.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_800_w": 800,
                "thumb_800_h": 741,
                "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_960.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_960_w": 960,
                "thumb_960_h": 889,
                "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01FWEKAVHV-178728f6dd\/image_1024.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 948,
                "original_w": 1700,
                "original_h": 1574,
                "thumb_tiny": "AwAsADCnRgfWkpaACkpce9GKAEooooAWjiiggfWgA4owKMemaSgBeKOKSigApce9JRQAuTRmkooAXNJRRQB\/\/9k=",
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/U01GFBBG0Q4\/F01FWEKAVHV\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F01FWEKAVHV-ea72292bd4",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U01GFBBG0Q4",
        "display_as_bot": false,
        "ts": "1607354647.232000",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9rq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Working on a low-code project for native apps. The idea is predicated on the argument that many apps are just \"skins around a database\".\n\nWhy is declarative UI + declarative queries a bad idea? For example we create a todo app like this:"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "reply_count": 14,
        "reply_users_count": 5,
        "latest_reply": "1608773466.379300",
        "reply_users": [
            "U01GFBBG0Q4",
            "UHWC9PXBL",
            "UA14TGLTC",
            "UKFNXF0F9",
            "U016DGRH70W"
        ],
        "replies": [
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607354744.232300"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607354895.232500"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607355053.232700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1607360977.235700"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607391545.236200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1607398956.236400"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1607435361.236800"
            },
            {
                "user": "U016DGRH70W",
                "ts": "1607587440.237800"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607801785.279100"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607802232.279400"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1607802267.279600"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1607960503.304300"
            },
            {
                "user": "U01GFBBG0Q4",
                "ts": "1608687837.374000"
            },
            {
                "user": "UKFNXF0F9",
                "ts": "1608773466.379300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "039a4326-13ac-43b1-a8e7-d99421bc07ed",
        "type": "message",
        "text": "The UI just renders what is in the database. Queries can make use of all the functionalities supported by SQLite.",
        "user": "U01GFBBG0Q4",
        "ts": "1607354744.232300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2449389d99ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-06\/1565852778289_2449389d99edbbf3d467_72.jpg",
            "first_name": "",
            "real_name": "elvis chidera",
            "display_name": "elvis chidera",
            "team": "T5TCAFTA9",
            "name": "elvis.chidera",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OMMF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The UI just renders what is in the database. Queries can make use of all the functionalities supported by SQLite."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "parent_user_id": "U01GFBBG0Q4"
    },
    {
        "client_msg_id": "7a6e8123-0cfb-4dc0-ab18-ed05a8fed287",
        "type": "message",
        "text": "Tasks listen to UI events, system events or database events.\n\nIn the example above, there is a task that listen to changes to the todos and automatically uploads to the server.",
        "user": "U01GFBBG0Q4",
        "ts": "1607354895.232500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2449389d99ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-06\/1565852778289_2449389d99edbbf3d467_72.jpg",
            "first_name": "",
            "real_name": "elvis chidera",
            "display_name": "elvis chidera",
            "team": "T5TCAFTA9",
            "name": "elvis.chidera",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rbNIN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tasks listen to UI events, system events or database events.\n\nIn the example above, there is a task that listen to changes to the todos and automatically uploads to the server."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "parent_user_id": "U01GFBBG0Q4"
    },
    {
        "client_msg_id": "6e39ead1-f8eb-4f20-8cfa-e5673bec3e32",
        "type": "message",
        "text": "This seems to eliminate the need for boilerplate or unnecessary architecture components. I have built a production app with this and the speed of iteration was really cool.\n\nI'm just curious if there are some fundamental issues with this that I'm missing.",
        "user": "U01GFBBG0Q4",
        "ts": "1607355053.232700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2449389d99ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-06\/1565852778289_2449389d99edbbf3d467_72.jpg",
            "first_name": "",
            "real_name": "elvis chidera",
            "display_name": "elvis chidera",
            "team": "T5TCAFTA9",
            "name": "elvis.chidera",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "smAsP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This seems to eliminate the need for boilerplate or unnecessary architecture components. I have built a production app with this and the speed of iteration was really cool.\n\nI'm just curious if there are some fundamental issues with this that I'm missing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "parent_user_id": "U01GFBBG0Q4"
    },
    {
        "client_msg_id": "E2DB6920-EFA7-4D42-A1AB-6A5409519974",
        "type": "message",
        "text": "this approach is similar to one of eve’s pro types, although they were closer to datalog than sql. you might find their experience report useful: <https:\/\/youtu.be\/WT2CMS0MxJ0|https:\/\/youtu.be\/WT2CMS0MxJ0>",
        "user": "UHWC9PXBL",
        "ts": "1607360977.235700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Garth Goldwater",
            "display_name": "Garth Goldwater",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"Against the Current\" by Chris Granger (Part 1)",
                "title_link": "https:\/\/youtu.be\/WT2CMS0MxJ0",
                "author_name": "Steven Krouse",
                "author_link": "https:\/\/www.youtube.com\/user\/stevekrouse",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/WT2CMS0MxJ0\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Against the Current\" by Chris Granger (Part 1)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/WT2CMS0MxJ0?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/WT2CMS0MxJ0",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/WT2CMS0MxJ0"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7q9xP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this approach is similar to one of eve’s pro types, although they were closer to datalog than sql. you might find their experience report useful: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/WT2CMS0MxJ0",
                                "text": "https:\/\/youtu.be\/WT2CMS0MxJ0"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "parent_user_id": "U01GFBBG0Q4",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U01GFBBG0Q4",
                    "USL4R0T61",
                    "UFPPABQ7P"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "a43b8b38-4ed9-48aa-bf39-585c2b95f5b5",
        "type": "message",
        "text": "Thanks Garth. I will check the video out.",
        "user": "U01GFBBG0Q4",
        "ts": "1607391545.236200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2449389d99ed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-06\/1565852778289_2449389d99edbbf3d467_72.jpg",
            "first_name": "",
            "real_name": "elvis chidera",
            "display_name": "elvis chidera",
            "team": "T5TCAFTA9",
            "name": "elvis.chidera",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QI1M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Garth. I will check the video out."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "parent_user_id": "U01GFBBG0Q4"
    },
    {
        "client_msg_id": "c87fa8ff-d2cb-43b9-b1de-3008797e357d",
        "type": "message",
        "text": "Main challenge I think of is the scenario where an temporary edit state doesn't validate.  As an abstraction, suppose you have two text fields which should contain non-negative integers that sum to 10.  Honestly, I think the solution is to keep both keep both committed consistent values as well as temporary being edited values in the database.  Then the UI has less to do with it, and it's more a question of when\/how to commit changes.",
        "user": "UA14TGLTC",
        "ts": "1607398956.236400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x\/J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Main challenge I think of is the scenario where an temporary edit state doesn't validate.  As an abstraction, suppose you have two text fields which should contain non-negative integers that sum to 10.  Honestly, I think the solution is to keep both keep both committed consistent values as well as temporary being edited values in the database.  Then the UI has less to do with it, and it's more a question of when\/how to commit changes."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607354647.232000",
        "parent_user_id": "U01GFBBG0Q4",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01GFBBG0Q4"
                ],
                "count": 1
            }
        ]
    }
]