[
    {
        "client_msg_id": "3cf99626-35ef-40a1-9d1a-40e3dd8a1b36",
        "type": "message",
        "text": "You could try a commented out horizontal divider maybe e.g. `\/**----------------**\/\/`",
        "user": "UDQBTJ211",
        "ts": "1600780444.096800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1600780459.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tL2pY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could try a commented out horizontal divider maybe e.g. "
                            },
                            {
                                "type": "text",
                                "text": "\/",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "*----------------",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "*\/\/",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600718253.069500",
        "parent_user_id": "UULA9D1GT"
    },
    {
        "client_msg_id": "540ab8e8-6d2f-4cf9-9d6b-ff197a924b5d",
        "type": "message",
        "text": "One advantage of `dup` and shuffling is that they force you to pay the cost of non-linearity.  Since named variables give you non-linearity for free, reference hydras sprout up easily.\n\nI guess my bigger qualm is that catenative programs tend to feel less catenative and more conventually referential as they get larger.  How can one keep the catenative spirit in bigger programs?\n\nMaybe some kind of dynamic scope?  Instead of one stack, each dynamic variable names the top of a stack.\n\nWith queues instead of stacks and you get to Lucid.  Concatenative reactive programming here we come!",
        "user": "UA14TGLTC",
        "ts": "1600837865.000600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VP9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One advantage of "
                            },
                            {
                                "type": "text",
                                "text": "dup",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and shuffling is that they force you to pay the cost of non-linearity.  Since named variables give you non-linearity for free, reference hydras sprout up easily.\n\nI guess my bigger qualm is that catenative programs tend to feel less catenative and more conventually referential as they get larger.  How can one keep the catenative spirit in bigger programs?\n\nMaybe some kind of dynamic scope?  Instead of one stack, each dynamic variable names the top of a stack.\n\nWith queues instead of stacks and you get to Lucid.  Concatenative reactive programming here we come!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600645382.040000",
        "parent_user_id": "UCUSW7WVD"
    }
]