[
    {
        "type": "message",
        "text": "Here's an example layout of my node UI using Yoga.  The false coloring just shows the rectangles and margins.  Really nice :slightly_smiling_face:",
        "files": [
            {
                "id": "F01K3Q2NN9W",
                "created": 1610361000,
                "timestamp": 1610361000,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 76350,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01K3Q2NN9W\/image.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01K3Q2NN9W\/download\/image.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "media_display_type": "unknown",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_64.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_80.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_360.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360_w": 360,
                "thumb_360_h": 151,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_480.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_480_w": 480,
                "thumb_480_h": 202,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_160.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_720.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720_w": 720,
                "thumb_720_h": 303,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01K3Q2NN9W-c83bb38d7a\/image_800.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_800_w": 800,
                "thumb_800_h": 337,
                "original_w": 922,
                "original_h": 388,
                "thumb_tiny": "AwAUADCCMRmM7j83ahVj8skn5u1EaqY2JfBHQUqqpiYl8EdqBiAR+VnPz+lBEflAg\/P6Uu1fJ3b\/AJvSkwPKzls5\/CgAYR+WpX73eiQRhF2HnvTcnHU0hJx1p2AQMR0o3GkopXELk4xRuOMZ4pKKAFyaM0lFAH\/\/2Q==",
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/UUQ2EQW21\/F01K3Q2NN9W\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F01K3Q2NN9W-7c0522087d",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "UUQ2EQW21",
        "display_as_bot": false,
        "ts": "1610361036.220100",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P3PFM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's an example layout of my node UI using Yoga.  The false coloring just shows the rectangles and margins.  Really nice "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610290914.218500",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "50ff49fd-a045-4a76-b9e2-f669f919bccc",
        "type": "message",
        "text": "Thanks for the thoughts everyone. Replies in order.\n\n&gt; <@UN57U8V53>: I’d recommend operational transforms if you have a server involved.\nMy server is just dumb data storage and presence for clients. It's not going to be running any of the editor logic, and I think the cost of involving it in the concurrent editing (eg: having it update a canonical copy after each edit) would outweigh the benefit of using OT instead of CRDTs. I'm not worried about the memory growth of CRDTs at the scale I'd be using them (fairly coarse), and I'm not worried about invalid states, but it's good to know that those are sticking points. Thanks!\n\n&gt; <@UCGAK10LS>: Regarding “I don’t want to have to implement CRDTs”, isn’t the logic really damn simple? [...]\nSimple or not, there's a bunch of factors and tradeoffs to consider when writing something like CRDT structures\/functions: correctness, performance, memory, API design, quality-of-life features, identification of common pitfalls, development time cost, mental overhead, and umpteen more. I'm currently just _considering_ using CRDTs (or OT, or something else) in service of adding collaborative editing features to a tool I'm building. The collaborative editing is not a key feature, it's something I'm exploring as a might-be-cool option. I need to keep most of my focus on the domain problem my tool is addressing. This is why a library that already weighed those tradeoffs and made some coherent and well-justified decisions about them would be nice.\n\n&gt; <@UFPPABQ7P>: What kind of data? Is it something like a node &amp; edge based editor or something more like structured text? [...] Do you have offline editing?\nIt's sort of like a small spreadsheet, without formulas, where the main interaction is that you can swap any two cells. Stupidly simple. There will be offline editing, but I'm not worried about the case where wildly divergent offline edits need to be coherently reconciled later. There will be versioning (outside\/above the level where CRDTs \/ collaborative editing comes into play), and that's where conflicting divergent offline edits can be resolved.\n\nThanks again everyone!",
        "user": "UC2A2ARPT",
        "ts": "1610383885.221000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H+Ofe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the thoughts everyone. Replies in order.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN57U8V53"
                            },
                            {
                                "type": "text",
                                "text": ": I’d recommend operational transforms if you have a server involved."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMy server is just dumb data storage and presence for clients. It's not going to be running any of the editor logic, and I think the cost of involving it in the concurrent editing (eg: having it update a canonical copy after each edit) would outweigh the benefit of using OT instead of CRDTs. I'm not worried about the memory growth of CRDTs at the scale I'd be using them (fairly coarse), and I'm not worried about invalid states, but it's good to know that those are sticking points. Thanks!\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": ": Regarding “I don’t want to have to implement CRDTs”, isn’t the logic really damn simple? [...]"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSimple or not, there's a bunch of factors and tradeoffs to consider when writing something like CRDT structures\/functions: correctness, performance, memory, API design, quality-of-life features, identification of common pitfalls, development time cost, mental overhead, and umpteen more. I'm currently just "
                            },
                            {
                                "type": "text",
                                "text": "considering",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " using CRDTs (or OT, or something else) in service of adding collaborative editing features to a tool I'm building. The collaborative editing is not a key feature, it's something I'm exploring as a might-be-cool option. I need to keep most of my focus on the domain problem my tool is addressing. This is why a library that already weighed those tradeoffs and made some coherent and well-justified decisions about them would be nice.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFPPABQ7P"
                            },
                            {
                                "type": "text",
                                "text": ": What kind of data? Is it something like a node & edge based editor or something more like structured text? [...] Do you have offline editing?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's sort of like a small spreadsheet, without formulas, where the main interaction is that you can swap any two cells. Stupidly simple. There will be offline editing, but I'm not worried about the case where wildly divergent offline edits need to be coherently reconciled later. There will be versioning (outside\/above the level where CRDTs \/ collaborative editing comes into play), and that's where conflicting divergent offline edits can be resolved.\n\nThanks again everyone!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UJ6LDMMN0",
                    "UN57U8V53"
                ],
                "count": 3
            }
        ]
    }
]