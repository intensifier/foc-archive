[
    {
        "text": "Over the last weeks I have been working on my moldable inspector for Common Lisp again, with the goal of turning it into a support platform for explainable data science. One big task that I have finally achieved is code browsing. You can navigate through the code by clicking on symbols in displayed code. And you can transclude code into HTML, as shown on the first pane.\n\nThis wasn't trivial to do because Common Lisp cannot be statically parsed. When loading code, Lisp reads one top-level form (everything between a top-level pair of parentheses), executes it, and then goes on to the next one. The semantics of each form thus depend on the previous ones. Static parsing, as I do here, can never be perfect. The goal is getting the parser to deal with 99% of code correctly and not crash on the remaining 1%.\n\nFortunately, others had done most of the hard work, and I could use <https:\/\/s-expressionists.github.io\/Eclector\/|Eclector>, a portable and extensible Common Lisp reader, as the basis for my code browser.\n\nThe code for my demo <https:\/\/codeberg.org\/khinsen\/ratp-points-of-sale\/|available on Codeberg>.",
        "files": [
            {
                "id": "F082PKND6FM",
                "created": 1732705496,
                "timestamp": 1732705496,
                "name": "simplescreenrecorder-2024-11-27_11.59.45.mkv",
                "title": "simplescreenrecorder-2024-11-27_11.59.45.mkv",
                "mimetype": "video\/x-matroska",
                "filetype": "mkv",
                "pretty_type": "Matroska Video",
                "user": "UJBAJNFLK",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 786432,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082PKND6FM-32202c79b1\/simplescreenrecorder-2024-11-27_11.59.45.mp4?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "url_private": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082PKND6FM-32202c79b1\/simplescreenrecorder-2024-11-27_11.59.45.mp4?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F082PKND6FM\/download\/simplescreenrecorder-2024-11-27_11.59.45.mkv?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "hls": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082PKND6FM-32202c79b1\/file.m3u8?_xcb=7e4a5&t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "hls_embed": "data:application\/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MTM4MjI5NyxBVkVSQUdFLUJBTkRXSURUSD0xMDUzMjUwLENPREVDUz0iYXZjMS42NDAwMjgsbXA0YS40MC41IixSRVNPTFVUSU9OPTE5MjB4MTA4MCxGUkFNRS1SQVRFPTI5Ljk3MApkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd09ESlFTMDVFTmtaTkxUTXlNakF5WXpjNVlqRXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TURFdWRITUtJMFZZVkVsT1JqbzJMakF3Tml3S2FIUjBjSE02THk5bWFXeGxjeTV6YkdGamF5NWpiMjB2Wm1sc1pYTXRkRzFpTDFRMVZFTkJSbFJCT1MxR01EZ3lVRXRPUkRaR1RTMHpNakl3TW1NM09XSXhMMlpwYkdWZlNGOHlOalJmTVRreU1IZ3hNRGd3WHpZMU1EQkxRbEJUWHpkUlZrSlNYekF3TURBeUxuUnpDaU5GV0ZSSlRrWTZNaTQ0TnpBc0NtaDBkSEJ6T2k4dlptbHNaWE11YzJ4aFkyc3VZMjl0TDJacGJHVnpMWFJ0WWk5VU5WUkRRVVpVUVRrdFJqQTRNbEJMVGtRMlJrMHRNekl5TURKak56bGlNUzltYVd4bFgwaGZNalkwWHpFNU1qQjRNVEE0TUY4Mk5UQXdTMEpRVTE4M1VWWkNVbDh3TURBd015NTBjd29qUlZoVUxWZ3RSVTVFVEVsVFZBbz0K",
                "mp4_low": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082PKND6FM-32202c79b1\/simplescreenrecorder-2024-11-27_11.59.45_trans.mp4?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "duration_ms": 14881,
                "media_display_type": "video",
                "thumb_video": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082PKND6FM-32202c79b1\/simplescreenrecorder-2024-11-27_11.59.45_thumb_video.jpeg?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_video_w": 1920,
                "thumb_video_h": 1080,
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/UJBAJNFLK\/F082PKND6FM\/simplescreenrecorder-2024-11-27_11.59.45.mkv",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F082PKND6FM-e14d0645a4",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UJBAJNFLK",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5NM37",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Over the last weeks I have been working on my moldable inspector for Common Lisp again, with the goal of turning it into a support platform for explainable data science. One big task that I have finally achieved is code browsing. You can navigate through the code by clicking on symbols in displayed code. And you can transclude code into HTML, as shown on the first pane.\n\nThis wasn't trivial to do because Common Lisp cannot be statically parsed. When loading code, Lisp reads one top-level form (everything between a top-level pair of parentheses), executes it, and then goes on to the next one. The semantics of each form thus depend on the previous ones. Static parsing, as I do here, can never be perfect. The goal is getting the parser to deal with 99% of code correctly and not crash on the remaining 1%.\n\nFortunately, others had done most of the hard work, and I could use "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/s-expressionists.github.io\/Eclector\/",
                                "text": "Eclector"
                            },
                            {
                                "type": "text",
                                "text": ", a portable and extensible Common Lisp reader, as the basis for my code browser.\n\nThe code for my demo "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/codeberg.org\/khinsen\/ratp-points-of-sale\/",
                                "text": "available on Codeberg"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1732705810.768409",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1732711577.000000"
        },
        "client_msg_id": "87b6ac80-9987-4e2a-8bf5-acb3e2038f05",
        "thread_ts": "1732705810.768409",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1734422702.258699",
        "reply_users": [
            "UE1JQM9HQ",
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UE1JQM9HQ",
                "ts": "1732718379.627369"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1734422702.258699"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U02E4DAQGSZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1732718379.627369",
        "client_msg_id": "d0883e0d-3fbe-4119-b37d-050685b581ba",
        "text": "Beautiful!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732705810.768409",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C04yh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Beautiful!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "So orthogonal artifact 1 of (maybe) 3 for reimplementing (a subset of) Observable in userspace is done (<https:\/\/observablehq.com\/@tomlarkworthy\/exporter|exporter>).  The next thing, as discussed in the demo, is to preserve the editing experience by adding a userspace code editor, so that the exported, unbundled (offline-first) notebook carries its own editor around with it.\n\nProgress is pretty good. It ends up a little different to Observable as it is pinned to a specific cell, but it can also do extra things like edit the variables in dependancies which is what you want when the export format has bundled all the dependancies. You might need to change them too!\n\nThe third required project, I thought of while preparing for the demo, is the notebook renderer itself. That should also be in userspace and hackable. Even with the editor component, you can't reorder cells, as there is a whole presentation layer that lives above the runtime that chooses how to render the results. That rendering process itself needs to be hackable, so you can leave the vertical notebook format entirely. Currently the single file format follows the path of the existing observable runtime of instantiating the DOM before starting the runtime and piping observations to the DOM, but for maximum control we should let userspace be informed of the runtime changes and choose how to render. Just a shower thought at the moment but I definitely think the \"renderer\" should be another orthogonal component.\n\nI am trying to document my learnings about the Observable system in some reference documentation <https:\/\/observablehq.com\/@tomlarkworthy\/observable-notes|here> if you want to learn more. That documentation actually hacks the runtime so the concepts are explained adjacent to the actually executing concepts. I love literate programming.\n\naside: I am enjoying the single file hermetic webpage format, its like portable statically linked binary that ends up being way faster than normal webpages.",
        "files": [
            {
                "id": "F082P5ABVMK",
                "created": 1732731647,
                "timestamp": 1732731647,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U02E4DAQGSZ",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 244882,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F082P5ABVMK\/image.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F082P5ABVMK\/download\/image.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "media_display_type": "unknown",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_64.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_80.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_360.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_360_w": 360,
                "thumb_360_h": 158,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_480.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_480_w": 480,
                "thumb_480_h": 210,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_160.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_720.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_720_w": 720,
                "thumb_720_h": 316,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_800.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_800_w": 800,
                "thumb_800_h": 351,
                "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_960.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_960_w": 960,
                "thumb_960_h": 421,
                "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F082P5ABVMK-176d9d305a\/image_1024.png?t=xoxe-197418537349-8223637002050-8209109683975-8e5db0bb79a4badb7e08803e10ed879b",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 449,
                "original_w": 2422,
                "original_h": 1062,
                "thumb_tiny": "AwAVADDR\/iyKXLe1Hej8KADJpaQcetHNAC0Uc0mPr+dAC0lLSUAFLSUUALRSUUAf\/9k=",
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/U02E4DAQGSZ\/F082P5ABVMK\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F082P5ABVMK-eb9867c7fc",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U02E4DAQGSZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BfhFQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So orthogonal artifact 1 of (maybe) 3 for reimplementing (a subset of) Observable in userspace is done ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/exporter",
                                "text": "exporter"
                            },
                            {
                                "type": "text",
                                "text": ").  The next thing, as discussed in the demo, is to preserve the editing experience by adding a userspace code editor, so that the exported, unbundled (offline-first) notebook carries its own editor around with it.\n\nProgress is pretty good. It ends up a little different to Observable as it is pinned to a specific cell, but it can also do extra things like edit the variables in dependancies which is what you want when the export format has bundled all the dependancies. You might need to change them too!\n\nThe third required project, I thought of while preparing for the demo, is the notebook renderer itself. That should also be in userspace and hackable. Even with the editor component, you can't reorder cells, as there is a whole presentation layer that lives above the runtime that chooses how to render the results. That rendering process itself needs to be hackable, so you can leave the vertical notebook format entirely. Currently the single file format follows the path of the existing observable runtime of instantiating the DOM before starting the runtime and piping observations to the DOM, but for maximum control we should let userspace be informed of the runtime changes and choose how to render. Just a shower thought at the moment but I definitely think the \"renderer\" should be another orthogonal component.\n\nI am trying to document my learnings about the Observable system in some reference documentation "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/observable-notes",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": " if you want to learn more. That documentation actually hacks the runtime so the concepts are explained adjacent to the actually executing concepts. I love literate programming.\n\naside: I am enjoying the single file hermetic webpage format, its like portable statically linked binary that ends up being way faster than normal webpages."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1732732726.325769",
        "client_msg_id": "737aec7b-0c27-4bf4-84bc-88b4a0c48766",
        "thread_ts": "1732732726.325769",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1732737213.870409",
        "reply_users": [
            "U0123H7JRDM",
            "U02E4DAQGSZ"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1732736907.812709"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1732737031.714269"
            },
            {
                "user": "U0123H7JRDM",
                "ts": "1732737086.390219"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1732737163.164389"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1732737213.870409"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U0123H7JRDM",
                    "UJBAJNFLK",
                    "U06DZDM8C93"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1732736907.812709",
        "client_msg_id": "C14F802A-23A2-4BC2-AB37-366B9E5107E1",
        "text": "How big is the single file?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d7409794997",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-10-06\/7859337189872_4d74097949979c7eb322_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732732726.325769",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6QIof",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How big is the single file?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1732737031.714269",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1732737072.000000"
        },
        "client_msg_id": "19c343c4-5966-45f3-9bc6-2328f4403970",
        "text": "500kb and gzips to 256kb which it auto does on s3 upload (I did not demo that). It prints out it's content so often I find a 1mb image in there accidentally",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732732726.325769",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9h7IV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "500kb and gzips to 256kb which it auto does on s3 upload (I did not demo that). It prints out it's content so often I find a 1mb image in there accidentally"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1732737086.390219",
        "client_msg_id": "76E31CB0-3F02-4CE7-AE9C-FEEEFEC8B18E",
        "text": "Thats pretty small, very good!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d7409794997",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-10-06\/7859337189872_4d74097949979c7eb322_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732732726.325769",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7L3fW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thats pretty small, very good!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1732737163.164389",
        "client_msg_id": "63258d39-b163-4cca-a8c2-503117f8e161",
        "text": "Yeah if you look at the file attachments they are gzipped, so the notebook decompresses as part of the importmap dance",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732732726.325769",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0GzOP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah if you look at the file attachments they are gzipped, so the notebook decompresses as part of the importmap dance"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1732737213.870409",
        "client_msg_id": "8c39059d-8f8f-4877-8f55-7ab975a652e4",
        "text": "The raw JavaScript in the notebook is left uncompressed for hacking, it's just the dependencies like the runtime that are compressed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732732726.325769",
        "parent_user_id": "U02E4DAQGSZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lNirc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The raw JavaScript in the notebook is left uncompressed for hacking, it's just the dependencies like the runtime that are compressed"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]