[
    {
        "type": "message",
        "text": "This week: beginnings of a command shell for the Mu computer.\n\n<https:\/\/archive.org\/details\/akkartik-2min-2020-10-27>\n\nA postfix shell is promising in some ways, but I'm not sure how to support concurrency. Currently each operation completes before the next. I _could_ allow \"pipe stages\" to continue to share data after they drop file handles on the stack, but there are problems: how often we refresh, how we kill processes from past refreshes, how we visualize file handle contents.\n\nMain project page: <https:\/\/github.com\/akkartik\/mu>",
        "files": [
            {
                "id": "F01D0J3GFB9",
                "created": 1603825592,
                "timestamp": 1603825592,
                "name": "mu-shell.png",
                "title": "mu-shell.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UCUSW7WVD",
                "editable": false,
                "size": 61596,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01D0J3GFB9\/mu-shell.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01D0J3GFB9\/download\/mu-shell.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "media_display_type": "unknown",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_64.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_80.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_360.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360_w": 360,
                "thumb_360_h": 91,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_480.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_480_w": 480,
                "thumb_480_h": 122,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_160.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_720.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720_w": 720,
                "thumb_720_h": 183,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_800.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_800_w": 800,
                "thumb_800_h": 203,
                "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_960.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_960_w": 960,
                "thumb_960_h": 244,
                "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01D0J3GFB9-c3ce12c3e6\/mu-shell_1024.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 260,
                "original_w": 1271,
                "original_h": 323,
                "thumb_tiny": "AwAMADCzz\/k0tLRQAmfY\/lR3o7UYoAKAc9MY+tG0ZB9KWgD\/2Q==",
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/UCUSW7WVD\/F01D0J3GFB9\/mu-shell.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F01D0J3GFB9-779f8a8bf8",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "ts": "1603825655.079900",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yViay",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This week: beginnings of a command shell for the Mu computer.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/archive.org\/details\/akkartik-2min-2020-10-27"
                            },
                            {
                                "type": "text",
                                "text": "\n\nA postfix shell is promising in some ways, but I'm not sure how to support concurrency. Currently each operation completes before the next. I "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " allow \"pipe stages\" to continue to share data after they drop file handles on the stack, but there are problems: how often we refresh, how we kill processes from past refreshes, how we visualize file handle contents.\n\nMain project page: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1603825655.079900",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1603876162.080900",
        "reply_users": [
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "U013ZLJARC7",
                "ts": "1603876162.080900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJ6LDMMN0",
                    "U85HCL7JP",
                    "U01661S9F34",
                    "U013ZLJARC7",
                    "U0123H7JRDM",
                    "U015902ESJC",
                    "UAZT04VT4"
                ],
                "count": 7
            }
        ]
    }
]