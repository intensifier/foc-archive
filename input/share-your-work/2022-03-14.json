[
    {
        "client_msg_id": "90e8cf90-1312-4f1e-894d-6599b9ef6b17",
        "type": "message",
        "text": "This was super compelling! I’m really interested in the interactive animations and physics here, but I’d actually love to know more about the TeX integration. Is there somewhere I can read more about that? I’ve only done a little Clojure so maybe it’s nothing novel, but goddamn would I love to have tighter TeX integration in my day-to-day work.",
        "user": "U014WA16VNJ",
        "ts": "1647260193.753029",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "12ac8e70899f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-22\/1269623799473_12ac8e70899f200f402b_72.png",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aIqm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was super compelling! I’m really interested in the interactive animations and physics here, but I’d actually love to know more about the TeX integration. Is there somewhere I can read more about that? I’ve only done a little Clojure so maybe it’s nothing novel, but goddamn would I love to have tighter TeX integration in my day-to-day work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "ddd1c2c5-2cb1-4cb6-b252-313c11f99d24",
        "type": "message",
        "text": "<@U014WA16VNJ> great question; one goal of this project is to NOT present a big monolithic thing, but a fissionable artifact where folks can make off with individual components. SO in that spirit the TeX rendering is definitely independent.\n\nOn the clojure side, there are three main ideas that work together for TeX:\n\n1. <https:\/\/github.com\/sicmutils\/sicmutils|the sicmutils library> ships generic versions of functions like `+`, `-`, `*`, `\/,`, all the trig operators, `transpose` , etc etc, and those functions are overloaded for (among other types) numbers and symbolic math. Symbolic math operations simply build up a clojure expression tree, like `(+ (sin x) (expt (cos x) 3))`\n2. the library also contains a powerful simplifier that can transform tree =&gt; simplified tree…\n3. There there is a <https:\/\/github.com\/sicmutils\/sicmutils\/blob\/main\/src\/sicmutils\/expression\/render.cljc#L574-L581|->TeX&gt; function that can turn this expression into a string of TeX. When you use Clerk to show TeX, it uses `-&gt;TeX` and then points katex or mathjax at the resulting string.\nThere are some other fun features of `-&gt;TeX`, like, if a symbol is named after a greek letter it gets shown as greek. `'x_1` , underscores, show up an subscripts, and superscripts work too;",
        "user": "U01EHAE9D0W",
        "ts": "1647260821.627209",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcd378611a91",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cd378611a91eb7852ae19cd582de718a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Sam Ritchie",
            "display_name": "Sam Ritchie",
            "team": "T5TCAFTA9",
            "name": "sritchie09",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "U01EHAE9D0W",
            "ts": "1647261058.000000"
        },
        "attachments": [
            {
                "from_url": "https:\/\/github.com\/sicmutils\/sicmutils",
                "image_url": "https:\/\/opengraph.githubassets.com\/0faa3ef84b1defe8c334767afa962a027f9a5a2aa05df11568766d9f5e4321c5\/sicmutils\/sicmutils",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 40331,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/sicmutils\/sicmutils",
                "fallback": "GitHub: GitHub - sicmutils\/sicmutils: Scmutils in Clojure",
                "text": "Scmutils in Clojure. Contribute to sicmutils\/sicmutils development by creating an account on GitHub.",
                "title": "GitHub - sicmutils\/sicmutils: Scmutils in Clojure",
                "title_link": "https:\/\/github.com\/sicmutils\/sicmutils",
                "service_name": "GitHub"
            },
            {
                "from_url": "https:\/\/github.com\/sicmutils\/sicmutils\/blob\/main\/src\/sicmutils\/expression\/render.cljc#L574-L581",
                "image_url": "https:\/\/opengraph.githubassets.com\/0faa3ef84b1defe8c334767afa962a027f9a5a2aa05df11568766d9f5e4321c5\/sicmutils\/sicmutils",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 40331,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 2,
                "original_url": "https:\/\/github.com\/sicmutils\/sicmutils\/blob\/main\/src\/sicmutils\/expression\/render.cljc#L574-L581",
                "fallback": "GitHub: sicmutils\/render.cljc at main · sicmutils\/sicmutils",
                "text": "Scmutils in Clojure. Contribute to sicmutils\/sicmutils development by creating an account on GitHub.",
                "title": "sicmutils\/render.cljc at main · sicmutils\/sicmutils",
                "title_link": "https:\/\/github.com\/sicmutils\/sicmutils\/blob\/main\/src\/sicmutils\/expression\/render.cljc#L574-L581",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YhqdF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " great question; one goal of this project is to NOT present a big monolithic thing, but a fissionable artifact where folks can make off with individual components. SO in that spirit the TeX rendering is definitely independent.\n\nOn the clojure side, there are three main ideas that work together for TeX:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/sicmutils\/sicmutils",
                                        "text": "the sicmutils library"
                                    },
                                    {
                                        "type": "text",
                                        "text": " ships generic versions of functions like "
                                    },
                                    {
                                        "type": "text",
                                        "text": "+",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", "
                                    },
                                    {
                                        "type": "text",
                                        "text": "-",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", "
                                    },
                                    {
                                        "type": "text",
                                        "text": "*",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", "
                                    },
                                    {
                                        "type": "text",
                                        "text": "\/,",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", all the trig operators, "
                                    },
                                    {
                                        "type": "text",
                                        "text": "transpose",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " , etc etc, and those functions are overloaded for (among other types) numbers and symbolic math. Symbolic math operations simply build up a clojure expression tree, like "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(+ (sin x) (expt (cos x) 3))",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the library also contains a powerful simplifier that can transform tree => simplified tree…"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There there is a "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/sicmutils\/sicmutils\/blob\/main\/src\/sicmutils\/expression\/render.cljc#L574-L581",
                                        "text": "->TeX"
                                    },
                                    {
                                        "type": "text",
                                        "text": " function that can turn this expression into a string of TeX. When you use Clerk to show TeX, it uses "
                                    },
                                    {
                                        "type": "text",
                                        "text": "->TeX",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and then points katex or mathjax at the resulting string."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere are some other fun features of "
                            },
                            {
                                "type": "text",
                                "text": "->TeX",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", like, if a symbol is named after a greek letter it gets shown as greek. "
                            },
                            {
                                "type": "text",
                                "text": "'x_1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , underscores, show up an subscripts, and superscripts work too;"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fb15b360-2b9f-4d5a-86c0-e234f07b2944",
        "type": "message",
        "text": "<@U014WA16VNJ> ACTUALLY check this out: <https:\/\/nextjournal.com\/try\/samritchie\/sicmutils\/>",
        "user": "U01EHAE9D0W",
        "ts": "1647261067.719389",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcd378611a91",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cd378611a91eb7852ae19cd582de718a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Sam Ritchie",
            "display_name": "Sam Ritchie",
            "team": "T5TCAFTA9",
            "name": "sritchie09",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/nextjournal.com\/try\/samritchie\/sicmutils\/",
                "thumb_url": "https:\/\/cdn.nextjournal.com\/data\/QmWFxLjPwWcNEYj5oWHVNmiNzsRdZT1BQrheLoFSQCxDao?content-type=image%2Fpng",
                "thumb_width": 600,
                "thumb_height": 600,
                "id": 1,
                "original_url": "https:\/\/nextjournal.com\/try\/samritchie\/sicmutils\/",
                "fallback": "Nextjournal: SICMUtils+Nextjournal Quick Start",
                "text": "This page contains a series of \"Getting Started\" warmup exercises for the SICMUtils Clojure(script) library.",
                "title": "SICMUtils+Nextjournal Quick Start",
                "title_link": "https:\/\/nextjournal.com\/try\/samritchie\/sicmutils\/",
                "service_name": "Nextjournal"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H=5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " ACTUALLY check this out: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/nextjournal.com\/try\/samritchie\/sicmutils\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "type": "message",
        "text": "the library can also run in Nextjournal fully in the browser, forget all this hybrid clerk stuff :slightly_smiling_face: scroll down a bit and you can see examples of TeX generation:",
        "files": [
            {
                "id": "F036ZLMGGBW",
                "created": 1647261128,
                "timestamp": 1647261128,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U01EHAE9D0W",
                "editable": false,
                "size": 68533,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F036ZLMGGBW\/image.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F036ZLMGGBW\/download\/image.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "media_display_type": "unknown",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_64.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_80.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_360.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_360_w": 353,
                "thumb_360_h": 360,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_480.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_480_w": 470,
                "thumb_480_h": 480,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_160.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_720.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_720_w": 706,
                "thumb_720_h": 720,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F036ZLMGGBW-b768cc542e\/image_800.png?t=xoxe-197418537349-3752905280865-3737338514245-a498827e2ba3c388beb14b9717f8885a",
                "thumb_800_w": 800,
                "thumb_800_h": 816,
                "original_w": 880,
                "original_h": 898,
                "thumb_tiny": "AwAwAC\/SPpkj6Un\/AAI0MM9abk\/5FADsf7Roxz940gz3NLQA7IoyKbRQAp61GFz6flUh603bg9f0oATb9PypQCO\/6Uo\/OigAooooAUmgHrQ3b60L1NAC0UUUAFFFFAH\/2Q==",
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/U01EHAE9D0W\/F036ZLMGGBW\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F036ZLMGGBW-7ba901aaf4",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U01EHAE9D0W",
        "display_as_bot": false,
        "ts": "1647261130.329359",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "If86",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the library can also run in Nextjournal fully in the browser, forget all this hybrid clerk stuff "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " scroll down a bit and you can see examples of TeX generation:"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "576eef7a-b9cf-40e1-a965-24a8b4f5e1bf",
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "662b1986-4c54-4da3-bccb-2fa72507603f",
        "type": "message",
        "text": "<@U014WA16VNJ> if there’s more tuneability you want (almost guaranteed) let’s talk, I fully agree that the ability to write TeX with something more lispy than `\\the{usual}` , without any ceremony, would be REALLY valuable beyond physics etc",
        "user": "U01EHAE9D0W",
        "ts": "1647261174.872729",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcd378611a91",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cd378611a91eb7852ae19cd582de718a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Sam Ritchie",
            "display_name": "Sam Ritchie",
            "team": "T5TCAFTA9",
            "name": "sritchie09",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EF8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " if there’s more tuneability you want (almost guaranteed) let’s talk, I fully agree that the ability to write TeX with something more lispy than "
                            },
                            {
                                "type": "text",
                                "text": "\\the{usual}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , without any ceremony, would be REALLY valuable beyond physics etc"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "61da623c-1662-4683-b477-8e1b7b6b68f5",
        "type": "message",
        "text": "<@U01EHAE9D0W> this is really really cool! I’m going to have to dig more into this, interested to find out where its limits\/weak points are. And yeah, this feels close to something I could write without referencing a cheatsheet and a lot more idiomatic to the actual math I want to represent, instead of being wrapped in typesetting jargon. It also seems like an interesting intermediate representation that would be easier to work with than TeX itself.",
        "user": "U014WA16VNJ",
        "ts": "1647262144.894589",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "12ac8e70899f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-22\/1269623799473_12ac8e70899f200f402b_72.png",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ReT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01EHAE9D0W"
                            },
                            {
                                "type": "text",
                                "text": " this is really really cool! I’m going to have to dig more into this, interested to find out where its limits\/weak points are. And yeah, this feels close to something I could write without referencing a cheatsheet and a lot more idiomatic to the actual math I want to represent, instead of being wrapped in typesetting jargon. It also seems like an interesting intermediate representation that would be easier to work with than TeX itself."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "a6a894b9-f795-4a37-80eb-3fe5a4a14b5a",
        "type": "message",
        "text": ":+1: well let’s keep talking, here or in a Github Discussion on <https:\/\/github.com\/sicmutils\/sicmutils> if a specific project like, for example, “I want to use -&gt;TeX without thinking about Clojure, from this editor” etc comes to mind",
        "user": "U01EHAE9D0W",
        "ts": "1647262353.592659",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcd378611a91",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cd378611a91eb7852ae19cd582de718a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Sam Ritchie",
            "display_name": "Sam Ritchie",
            "team": "T5TCAFTA9",
            "name": "sritchie09",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ddp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " well let’s keep talking, here or in a Github Discussion on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/sicmutils\/sicmutils"
                            },
                            {
                                "type": "text",
                                "text": " if a specific project like, for example, “I want to use ->TeX without thinking about Clojure, from this editor” etc comes to mind"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2a26fac1-64c3-4c33-9876-4387efaeaa3f",
        "type": "message",
        "text": "This sounds like the beginning of Markdown but for LaTeX. Go ahead!  :slightly_smiling_face:",
        "user": "UJBAJNFLK",
        "ts": "1647265460.859729",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lLyGi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sounds like the beginning of Markdown but for LaTeX. Go ahead!  "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ",
                    "U01EHAE9D0W"
                ],
                "count": 2
            },
            {
                "name": "slightly_smiling_face",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]